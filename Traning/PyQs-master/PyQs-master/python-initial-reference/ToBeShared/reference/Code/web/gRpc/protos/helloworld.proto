//To add comments to your .proto files, use C/C++-style // and /* ... */ syntax. 

syntax = "proto3";  //https://developers.google.com/protocol-buffers/docs/proto3

//Causes top-level messages, enums, and services to be defined at the package level, rather than 
//inside an outer class named after the .proto file
option java_multiple_files = true;
//The package you want to use for your generated Java classes.
option java_package = "python.examples.helloworld";
//The class name for the outermost Java class (and hence the file name) you want to generate.
option java_outer_classname = "HelloWorldProto";
//Sets the Objective-C class prefix which is prepended to all Objective-C generated classes and enums from this .proto
option objc_class_prefix = "HLW";
//option optimize_for = CODE_SIZE; //SPEED, LITE_RUNTIME

//in python this is ignored 
package helloworld;

// The greeting service definition.
service Greeter {
  // Takes HelloRequest and returns HelloReply
  rpc SayHello (HelloRequest) returns (HelloReply) {}
}

// Check how to assign unique Field Number(frequent fields - 1 to 15)
//https://developers.google.com/protocol-buffers/docs/proto3#assigning-field-numbers
message HelloRequest {
  string name = 1;
}

/*
https://developers.google.com/protocol-buffers/docs/proto3
Types 
Scalar - double,float, int32, int64, uint32, uint64, string , bool 
    Each has std default value
enum Corpus {  UNIVERSAL = 0;, ...}
Other message type eg HelloRequest
map<key_type, value_type> map_field = N;
Oneof:  Like discriminated union 
Any (bytes) after import "google/protobuf/any.proto";
By Default 'required', but can have 'optional' profix
'repeated' prefix means List 
You can nest messages as deeply as you like, then access like 
    SearchResponse.Result result = 1;
Fields can be removed, as long as the field number is not used again in updated message type.
int32, uint32, int64, uint64, and bool are all compatible 
string and bytes are compatible as long as the bytes are valid UTF-8. 
Changing a single value into a member of a new oneof is safe and binary compatible
*/

message HelloReply {
  string message = 1;
}
